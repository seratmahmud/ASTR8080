{\rtf1\ansi\ansicpg1252\cocoartf2758
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 This is the README document that goes with hw2.py for Mary Kaldor for ASTR8080 at Vanderbilt University. Homework 2 is broken into 4 tasks, so the python file is broken into 4 functions that address each of the questions.\
\
Function 1, square_area(), takes in RA and dec coordinates in degrees and returns the area of the square defined by those coordinates, as well as the coordinates in radians. The choice of unit is done so that these points can be plotted on an Aitoff projection or any other projection that requires radians for plotting. The area is calculated via an equation from ASTR8080\'92s notes on areas on the sphere. The function is called for 4 squares with the same RA bounds but different dec bounds. The dec bounds all have ranges of 10, but they go up the sky (hence, area gets smaller for each square). The full northern hemisphere is also plotted.\
\
Function 2, random_pop(), randomly populates a square that is given by RA and dec coordinates in degrees by area. This can handle the whole sky, or just a part of the sky. You must indicate the number of points that you would like in the square area that you feed into the function. random_pop() is used to demonstrate that the points per area in a small section of the sky has the same ratio as the points per area of the whole sky; this is beneficial, as it shows that the sky is properly populated randomly by area.\
\
Function 3, pixnum(), reads in a SDSS quasar file, frames the RA and dec (given in hour angle and degrees, respectively, in the initial file) in terms of pixel number in the HEALpix ring hierarchy, and produces a fits file with the RA and dec in radians and the pixel number for the 4-, 8-, and 16-sided ring hierarchy in a rec array stored in it. The most important thing about using this function is ensuring that you change the path for the SDSS quasar file and the location for writing your own fits file to somewhere that makes sense for you (I currently have it going through my home directory, so it won\'92t work on your computer until you change the path).\
\
Function 4, dense_pix(), opens the fits file that you wrote and reads in the data from it. The location of the quasars in degrees (of RA and dec) are plotted. The 5 most frequent pixels are plotted again in different colors over the whole set of quasars. The colors are in rainbow order from densest to least dense, but they are also labeled as such :)}